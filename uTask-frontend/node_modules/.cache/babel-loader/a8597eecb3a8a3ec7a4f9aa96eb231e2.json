{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Web Development\\\\todo-aplicacao\\\\uTask-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport api from './services/api'; // Axios\n// Imagens ---\n\nimport beach from \"./assets/beach.png\"; // -----------\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [tasksDone, setTasksDone] = useState([]);\n  const [tarefa_input, setTarefa_input] = useState('');\n  useEffect(() => {\n    async function loadTasks() {\n      function equalsTrue(entry) {\n        return entry.done === true;\n      }\n\n      function equalsFalse(entry) {\n        return entry.done === false;\n      }\n\n      const response = await api.get(\"/items/read\");\n      setTasks(response.data.filter(equalsTrue));\n      setTasksDone(response.data.filter(equalsFalse));\n      console.log(tasks);\n      console.log(tasksDone);\n    }\n\n    loadTasks();\n  }, []);\n\n  async function handleSubmit(e) {\n    // Criar\n    e.preventDefault();\n    const response = await api.post(\"/items/create\", {\n      \"content\": tarefa_input,\n      \"done\": true\n    });\n    console.log(response.data);\n    setTarefa_input(\"\");\n    setTasks([...tasks, response.data]);\n  }\n\n  function praiaNada() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nada\",\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: beach,\n        alt: \"Foto de uma praia\",\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nada por aqui!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n  function praiaOrTasks(array) {\n    if (array.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"praiaNada\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  function praiaOrTasksDone(array) {\n    if (array.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"praiaNada\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"sectionTop\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"center\",\n        children: \"uTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"refresh\",\n        children: \"refresh!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"center\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Add uma nova tarefa\",\n          pattern: \".{1,48}\",\n          title: \"Entrada deve ter no m\\xE1ximo 48 caracteres\",\n          value: tarefa_input,\n          onChange: e => setTarefa_input(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"sectionMiddle\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"center\",\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div-meio\",\n        children: [tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center task\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskLeft\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskRight\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"taskGreen\",\n              alt: \"Marcar tarefa como conclu\\xEDda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"taskRed\",\n              alt: \"Deletar tarefa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"praiaNada\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"sectionBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"center\",\n        children: \"DONE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div-rodape\",\n        children: praiaNada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"1dhv4EDWpZUOV99Rxl+MEzbnXEg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Web Development/todo-aplicacao/uTask-frontend/src/App.js"],"names":["React","useState","useEffect","api","beach","App","tasks","setTasks","tasksDone","setTasksDone","tarefa_input","setTarefa_input","loadTasks","equalsTrue","entry","done","equalsFalse","response","get","data","filter","console","log","handleSubmit","e","preventDefault","post","praiaNada","praiaOrTasks","array","length","praiaOrTasksDone","target","value","map","task","content","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport api from './services/api';   // Axios\n\n// Imagens ---\nimport beach from \"./assets/beach.png\";\n// -----------\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n    const [tasksDone, setTasksDone] = useState([]);\n\n    const [tarefa_input , setTarefa_input] = useState('');\n\n    useEffect(() => {\n        async function loadTasks() {\n            function equalsTrue(entry){\n                return entry.done === true; \n            }\n\n            function equalsFalse(entry){\n                return entry.done === false;\n            }\n\n            const response = await api.get(\"/items/read\");\n        \n            setTasks((response.data).filter(equalsTrue));\n            setTasksDone((response.data).filter(equalsFalse));\n\n            console.log(tasks);\n            console.log(tasksDone);\n        }\n\n        loadTasks();\n    }, []);\n\n    async function handleSubmit(e){ // Criar\n        e.preventDefault();\n\n        const response = await api.post(\"/items/create\", \n        {\n            \"content\": tarefa_input,\n            \"done\": true\n        })\n\n        console.log(response.data);\n        setTarefa_input(\"\");\n\n        setTasks([...tasks, response.data]);\n    }\n\n    function praiaNada(){\n        return(\n            <div id=\"nada\" className=\"center\" >\n                <img src={beach} alt=\"Foto de uma praia\" className=\"\" ></img>\n                <p>Nada por aqui!</p>\n            </div>\n        );\n    }\n\n    function praiaOrTasks(array){\n        if (array.length > 0){\n            return (\n                <div></div>\n            )\n        } else {\n            return <praiaNada />;\n        }\n    }\n\n    function praiaOrTasksDone(array){\n        if (array.length > 0){\n            return (\n                <div></div>\n            )\n        } else {\n            return <praiaNada />;\n        }\n    }\n\n    return ( \n        <>\n            <section id=\"sectionTop\">\n                <h1 className=\"center\">uTask</h1>\n\n                <button id=\"refresh\" >refresh!</button> {/* temporário */}\n\n                <form className=\"center\" onSubmit={handleSubmit} >\n                    <input \n                    type=\"text\"\n                    required \n                    placeholder=\"Add uma nova tarefa\"\n                    pattern=\".{1,48}\"\n                    title=\"Entrada deve ter no máximo 48 caracteres\"\n                    value={tarefa_input}\n                    onChange={e => setTarefa_input(e.target.value)} >\n                    </input>\n                    <button type=\"submit\" ></button>\n                </form>\n\n            </section>\n\n            <section id=\"sectionMiddle\" >\n                <hr></hr>\n\n                <h2 className=\"center\" >TODO</h2>\n\n                <div id=\"div-meio\" >\n                    {/*  {tasks.map(task => (\n                        <p>{tasks.id}</p>\n                    ))};    */}\n\n                    {tasks.map(task => (\n                        <div key={task._id} className=\"center task\" >\n                            <div className=\"taskLeft\" >\n                                <p>{task.content}</p>\n                            </div>\n        \n                            <div className=\"taskRight\" >\n                                <button className=\"taskGreen\" alt=\"Marcar tarefa como concluída\" ></button>\n                                <button className=\"taskRed\" alt=\"Deletar tarefa\" ></button>\n                            </div>\n                        </div>\n                    ))}\n\n                    <praiaNada />\n\n                </div>\n\n                {/*\n                Nada (praia)\n                \n                \n                */}\n\n            </section>\n\n            <section id=\"sectionBottom\" >\n                <hr></hr>\n\n                <h2 className=\"center\" >DONE</h2>\n\n                <div id=\"div-rodape\" >\n                    {/*}\n                    {tasksDone.map(task => (\n                        <div key={task._id} className=\"center task taskD\" >\n                            <div className=\"taskLeft\" >\n                                <p><s>{task.content}</s></p>\n                            </div>\n        \n                            <div className=\"taskRight\" >\n                                <button  ></button>\n                            </div>\n                        </div>\n                    ))}\n                    */}\n                    {praiaNada}\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}